"use strict";(self.webpackChunkatlas_site=self.webpackChunkatlas_site||[]).push([[895],{7214:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"metodos/metodos_etl_json_policies","title":"Pol\xedticas de JSON y export (estructura, compresi\xf3n, timestamps, merges)","description":"Gu\xeda pr\xe1ctica para publicar/consumir JSON en el Atlas: c\xf3mo estructurarlo, c\xf3mo serializar timestamps, c\xf3mo fusionar series jer\xe1rquicas por Q sin perder hist\xf3ricos, y cu\xe1l es el contrato m\xednimo de salida para res\xfamenes (agregados). El objetivo es minimizar tama\xf1o y fallos de E/S sin romper compatibilidad con front-ends.","source":"@site/docs/metodos/etl_json_policies.md","sourceDirName":"metodos","slug":"/metodos/etl_json_policies","permalink":"/atlas-site/docs/metodos/etl_json_policies","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"json","permalink":"/atlas-site/docs/tags/json"},{"inline":true,"label":"export","permalink":"/atlas-site/docs/tags/export"},{"inline":true,"label":"jerarquico","permalink":"/atlas-site/docs/tags/jerarquico"},{"inline":true,"label":"compresion","permalink":"/atlas-site/docs/tags/compresion"},{"inline":true,"label":"timestamps","permalink":"/atlas-site/docs/tags/timestamps"}],"version":"current","frontMatter":{"id":"metodos_etl_json_policies","title":"Pol\xedticas de JSON y export (estructura, compresi\xf3n, timestamps, merges)","slug":"/metodos/etl_json_policies","module":"metodos","version":"0.1.0","status":"draft","owners":["atlas-core"],"tags":["json","export","jerarquico","compresion","timestamps"],"source_repo":"https://github.com/matuteiglesias/atlas-site","source_path":"docs/metodos/etl_json_policies.md"},"sidebar":"tutorialSidebar","previous":{"title":"Charts & estilos \u2014 tablas, escalas y diagramas","permalink":"/atlas-site/docs/metodos/charts_and_styles"},"next":{"title":"Integraci\xf3n geo \u2014 IGN + Censo, claves y joins","permalink":"/atlas-site/docs/metodos/geo_integration_methods"}}');var i=n(4848),a=n(8453);const o={id:"metodos_etl_json_policies",title:"Pol\xedticas de JSON y export (estructura, compresi\xf3n, timestamps, merges)",slug:"/metodos/etl_json_policies",module:"metodos",version:"0.1.0",status:"draft",owners:["atlas-core"],tags:["json","export","jerarquico","compresion","timestamps"],source_repo:"https://github.com/matuteiglesias/atlas-site",source_path:"docs/metodos/etl_json_policies.md"},t=void 0,c={},l=[{value:"Principios de dise\xf1o (resumen operativo)",id:"principios-de-dise\xf1o-resumen-operativo",level:2},{value:"Contratos de exportaci\xf3n (cierra <em>MISSING_CONTRACTS</em> de 0125)",id:"contratos-de-exportaci\xf3n-cierra-missing_contracts-de-0125",level:2},{value:"A) Series jer\xe1rquicas (resultados por Q)",id:"a-series-jer\xe1rquicas-resultados-por-q",level:3},{value:"B) Res\xfamenes/estad\xedsticos (pipeline de 0125)",id:"b-res\xfamenesestad\xedsticos-pipeline-de-0125",level:3},{value:"Serializaci\xf3n de timestamps (sin TypeError)",id:"serializaci\xf3n-de-timestamps-sin-typeerror",level:2},{value:"Merge de JSON jer\xe1rquico (dos etapas, sin perder hist\xf3ricos)",id:"merge-de-json-jer\xe1rquico-dos-etapas-sin-perder-hist\xf3ricos",level:2},{value:"Eficiencia y publicaci\xf3n",id:"eficiencia-y-publicaci\xf3n",level:2},{value:"Manejo de errores y recuperaci\xf3n",id:"manejo-de-errores-y-recuperaci\xf3n",level:2},{value:"QA m\xednimo",id:"qa-m\xednimo",level:2},{value:"Referencias cruzadas",id:"referencias-cruzadas",level:2}];function d(e){const s={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:["Gu\xeda pr\xe1ctica para publicar/consumir JSON en el Atlas: ",(0,i.jsx)(s.strong,{children:"c\xf3mo estructurarlo"}),", ",(0,i.jsx)(s.strong,{children:"c\xf3mo serializar timestamps"}),", ",(0,i.jsx)(s.strong,{children:"c\xf3mo fusionar series jer\xe1rquicas por Q"})," sin perder hist\xf3ricos, y ",(0,i.jsx)(s.strong,{children:"cu\xe1l es el contrato m\xednimo"})," de salida para res\xfamenes (agregados). El objetivo es minimizar tama\xf1o y fallos de E/S sin romper compatibilidad con front-ends. "]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"principios-de-dise\xf1o-resumen-operativo",children:"Principios de dise\xf1o (resumen operativo)"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Normaliz\xe1 lo repetitivo"}),": mover constantes (",(0,i.jsx)(s.code,{children:"base"}),", ",(0,i.jsx)(s.code,{children:"frac"}),", etc.) a metadatos y referenciar por ID (evita redundancia). "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Comprim\xed al publicar"}),": JSON + ",(0,i.jsx)(s.code,{children:"gzip"})," (o ",(0,i.jsx)(s.code,{children:"brotli"}),") en disco/transporte; coste de CPU marginal vs. ahorro grande. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Evalu\xe1 binarios para volumen"}),": cuando el consumidor es batch, prefer\xed Parquet/Feather/MessagePack (y dej\xe1 JSON solo para web/SDK). "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Index\xe1 si consult\xe1s mucho"}),": para consultas repetidas, un ",(0,i.jsx)(s.code,{children:".sqlite"})," con \xedndices puede ganar en latencia y tama\xf1o. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Estructura jer\xe1rquica"}),": empaquet\xe1 series por ",(0,i.jsx)(s.code,{children:"observable \u2192 sintetico \u2192 data[grouper] \u2192 {Q: valor}"}),", con ",(0,i.jsx)(s.code,{children:"metadata.last_updated"})," separado. "]}),"\n"]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"Nota: si una pol\xedtica entra en conflicto con front-ends existentes, priorizar compatibilidad y documentar la excepci\xf3n."}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.h2,{id:"contratos-de-exportaci\xf3n-cierra-missing_contracts-de-0125",children:["Contratos de exportaci\xf3n (cierra ",(0,i.jsx)(s.em,{children:"MISSING_CONTRACTS"})," de 0125)"]}),"\n",(0,i.jsx)(s.h3,{id:"a-series-jer\xe1rquicas-resultados-por-q",children:"A) Series jer\xe1rquicas (resultados por Q)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Esquema"}),":","\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "observable": {\n    "sintetico": {\n      "metadata": { "last_updated": "YYYY-MM-DDTHH:MM:SSZ", "schema_version": "1.0.0", "frac": 0.005, "base": "H" },\n      "data": {\n        "Total_pais": { "2019Q1": 0.23, "2019Q2": 0.24 },\n        "AGLO_si=True": { "2019Q1": 0.31 }\n      }\n    }\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'\n* **Claves**: `observable` (m\xe9trica), `sintetico` (serie), `data[grouper][Q]`.\n\n* **Regla**: agregar Q **sin** sobrescribir trimestres previos.&#x20;\n\n* **Export**:\n\n~~~yaml\nexports:\n  - path: /results/result_H_Q-Total_pais_0.005.json\n    sha256: "<sha256>"\n    compression: "gzip"\n    schema_version: "1.0.0"\n    last_updated: "YYYY-MM-DDTHH:MM:SSZ"\n'})}),"\n",(0,i.jsx)(s.h3,{id:"b-res\xfamenesestad\xedsticos-pipeline-de-0125",children:"B) Res\xfamenes/estad\xedsticos (pipeline de 0125)"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Entrada"}),": registros a nivel persona/hogar; ",(0,i.jsx)(s.code,{children:"grouper[]"}),", funciones de agregaci\xf3n (incl. percentiles)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Salida JSON"})," (contrato m\xednimo):"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "metadata": { "grouper": ["PROV","DPTO"], "period": "2016Q1..2025Q2", "schema_version":"1.0.0" },\n  "stats": [\n    { "PROV": 2, "DPTO": 13, "n": 12034, "mean_ingreso": 70800, "p10": 22000, "p50": 65000, "p90": 145000 }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Nombres"}),": ",(0,i.jsx)(s.code,{children:"summary_[base]_[grouper-join('_')]_[period].json"})]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Garant\xedas"}),": tipos consistentes, sin NaNs en claves, y ",(0,i.jsx)(s.code,{children:"stats"})," como array de objetos."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Racional"}),": el script actual transforma individuos\u2192agregados y guarda JSON; aqu\xed fijamos estructura y metadatos. "]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"serializaci\xf3n-de-timestamps-sin-typeerror",children:"Serializaci\xf3n de timestamps (sin TypeError)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Problema t\xedpico"}),": ",(0,i.jsx)(s.code,{children:"TypeError: Object of type Timestamp is not JSON serializable"}),".\n",(0,i.jsx)(s.strong,{children:"Soluciones recomendadas"}),":"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Encoder custom"})," (cubre ",(0,i.jsx)(s.code,{children:"pd.Timestamp"}),"):"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'import json, pandas as pd\n\nclass CustomEncoder(json.JSONEncoder):\n    def default(self, obj):\n        if isinstance(obj, pd.Timestamp):\n            return obj.strftime(\'%Y-%m-%d\')\n        return super().default(obj)\n\n# uso\njson.dump(data_hierarchy, open("out.json","w"), cls=CustomEncoder)\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Esto intercepta objetos ",(0,i.jsx)(s.code,{children:"Timestamp"})," en cualquier nivel de la jerarqu\xeda. "]}),"\n",(0,i.jsxs)(s.ol,{start:"2",children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Conversi\xf3n profunda"})," (antes de exportar):"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def deep_convert_ts(x):\n    import pandas as pd\n    if isinstance(x, dict):\n        return {k: deep_convert_ts(v) for k, v in x.items()}\n    if isinstance(x, list):\n        return [deep_convert_ts(v) for v in x]\n    if isinstance(x, pd.Timestamp):\n        return x.isoformat()\n    return x\n"})}),"\n",(0,i.jsx)(s.p,{children:"Apl\xedcalo sobre la estructura si el encoder no est\xe1 disponible en el consumidor. "}),"\n",(0,i.jsxs)(s.ol,{start:"3",children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"DataFrames a string"})," (si hay columnas datetime en ",(0,i.jsx)(s.code,{children:"df"}),"):"]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"for col in df.columns:\n    if df[col].dtype == 'datetime64[ns]':\n        df[col] = df[col].astype(str)\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Conviene hacerlo ",(0,i.jsx)(s.strong,{children:"antes"})," de ",(0,i.jsx)(s.code,{children:'to_dict(orient="records")'}),". "]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"merge-de-json-jer\xe1rquico-dos-etapas-sin-perder-hist\xf3ricos",children:"Merge de JSON jer\xe1rquico (dos etapas, sin perder hist\xf3ricos)"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Decisi\xf3n"}),": construir datos del ",(0,i.jsx)(s.strong,{children:"Q actual"})," (",(0,i.jsx)(s.code,{children:"current_data"}),") y ",(0,i.jsx)(s.strong,{children:"fusionarlos"})," en la estructura acumulada (",(0,i.jsx)(s.code,{children:"all_data"}),") ",(0,i.jsx)(s.strong,{children:"sin sobrescribir"})," trimestres previos; actualizar solo el ",(0,i.jsx)(s.code,{children:"last_updated"}),". "]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def merge_jsons(main_data, new_data):\n    # Estructura: observable -> sintetico -> data[grouper][Q] = valor\n    for observable, metrics in new_data.items():\n        if observable not in main_data:\n            main_data[observable] = {}\n        for sintetico, details in metrics.items():\n            if sintetico not in main_data[observable]:\n                main_data[observable][sintetico] = { 'metadata': details['metadata'], 'data': {} }\n            else:\n                main_data[observable][sintetico]['metadata']['last_updated'] = details['metadata']['last_updated']\n            for grp_val, timeseries in details['data'].items():\n                if grp_val not in main_data[observable][sintetico]['data']:\n                    main_data[observable][sintetico]['data'][grp_val] = {}\n                for q, value in timeseries.items():\n                    main_data[observable][sintetico]['data'][grp_val][q] = value\n    return main_data\n"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Evit\xe1 ",(0,i.jsx)(s.code,{children:".update()"})," a nivel superior: puede ",(0,i.jsx)(s.strong,{children:"pisar"})," series completas; hac\xe9 ",(0,i.jsx)(s.strong,{children:"merge profundo"})," por ",(0,i.jsx)(s.code,{children:"q"}),". "]}),"\n",(0,i.jsxs)(s.li,{children:["Si prefer\xeds listas de entradas ",(0,i.jsx)(s.code,{children:"{q: valor}"}),", inspeccion\xe1 duplicados antes de ",(0,i.jsx)(s.code,{children:"append"}),". "]}),"\n",(0,i.jsxs)(s.li,{children:["Agreg\xe1 ",(0,i.jsx)(s.em,{children:"logging"})," verboso en altas/updates de ",(0,i.jsx)(s.code,{children:"q"})," para trazabilidad. "]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"eficiencia-y-publicaci\xf3n",children:"Eficiencia y publicaci\xf3n"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Compresi\xf3n"}),": almacenar ",(0,i.jsx)(s.code,{children:".json.gz"})," y servir con ",(0,i.jsx)(s.code,{children:"Content-Encoding: gzip"})," cuando sea posible. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Minimizaci\xf3n"}),": evitar claves/valores redundantes; constantes a ",(0,i.jsx)(s.code,{children:"metadata"}),". "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Formatos alternativos"}),": para pipelines anal\xedticos grandes, publicar en Parquet/MessagePack adem\xe1s de JSON. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cat\xe1logo"}),": para ",(0,i.jsx)(s.code,{children:"result_*"})," y nombres de ",(0,i.jsx)(s.code,{children:"results_path"}),", ver la p\xe1gina de naming y no duplicar contratos aqu\xed."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"manejo-de-errores-y-recuperaci\xf3n",children:"Manejo de errores y recuperaci\xf3n"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"JSONDecodeError"})}),": usualmente archivo mal formado/truncado; validar apertura y formato antes de merge. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Truncado en escritura"}),": us\xe1 escritura at\xf3mica: volcar a ",(0,i.jsx)(s.code,{children:"tmp"})," y ",(0,i.jsx)(s.code,{children:"os.replace(tmp, final)"}),". Confirmar cierre/flush. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Diagn\xf3stico"}),": imprimir columna/posici\xf3n del error y revisar final del archivo; si no hay backup, ",(0,i.jsx)(s.strong,{children:"regenerar"})," desde fuente. "]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"qa-m\xednimo",children:"QA m\xednimo"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Esquema"}),": validar presencia de ",(0,i.jsx)(s.code,{children:"metadata"})," y ",(0,i.jsx)(s.code,{children:"data"}),", y que ",(0,i.jsx)(s.code,{children:"data[grouper]"})," sea dict de ",(0,i.jsx)(s.code,{children:"{Q: valor}"}),". "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Timestamps"}),": ni un ",(0,i.jsx)(s.code,{children:"Timestamp"})," crudo en la estructura (encoder o conversi\xf3n previa). "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Hist\xf3ricos"}),": al insertar un Q nuevo, los Q previos permanecen; muestrear claves antes/despu\xe9s. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Tama\xf1o"}),": ratio de compresi\xf3n objetivo (",(0,i.jsx)(s.code,{children:".json.gz"}),"/",(0,i.jsx)(s.code,{children:".json"}),") y conteo de filas/entradas esperado. "]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Determinismo"}),": mismos insumos \u21d2 mismo hash ",(0,i.jsx)(s.code,{children:"sha256"})," del export (salvo cambios de metadatos)."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"referencias-cruzadas",children:"Referencias cruzadas"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Operaci\xf3n \u2192 results_path_naming"})," (naming ",(0,i.jsx)(s.code,{children:"result_*"})," y reglas de no colisi\xf3n)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"M\xe9todos \u2192 temporal_toolkit"})," (estructura Q/M/A y adaptadores)."]}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var r=n(6540);const i={},a=r.createContext(i);function o(e){const s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);